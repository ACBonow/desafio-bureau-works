{"ast":null,"code":"import TableView from '@/components/TableView.vue';\nimport PaginationView from '@/components/PaginationView.vue';\nimport ModalView from '@/components/ModalView.vue';\nimport TranslatorService from '@/services/TranslatorService.js';\nexport default {\n  components: {\n    TableView,\n    Pagination: PaginationView,\n    ModalView\n  },\n  data() {\n    return {\n      translators: {\n        content: [],\n        number: 0,\n        size: 10,\n        totalPages: 0,\n        first: true,\n        last: true\n      },\n      showModal: false,\n      editingTranslator: {\n        name: '',\n        email: '',\n        sourceLanguage: '',\n        targetLanguage: ''\n      },\n      headers: [{\n        label: '#',\n        style: 'width: 50px'\n      }, {\n        label: this.$t('translator.name')\n      }, {\n        label: this.$t('translator.email')\n      }, {\n        label: this.$t('translator.sourceLanguage')\n      }, {\n        label: this.$t('translator.targetLanguage')\n      }, {\n        label: this.$t('common.actions'),\n        style: 'width: 100px'\n      }],\n      fields: ['index', 'name', 'email', 'sourceLanguage', 'targetLanguage'],\n      actions: [{\n        class: 'btn btn-sm btn-primary me-2',\n        icon: 'bi bi-pencil',\n        title: this.$t('common.edit'),\n        handler: this.editTranslator\n      }, {\n        class: 'btn btn-sm btn-danger',\n        icon: 'bi bi-x-lg',\n        title: this.$t('common.delete'),\n        handler: this.deleteTranslator\n      }]\n    };\n  },\n  created() {\n    this.loadTranslators();\n  },\n  methods: {\n    async loadTranslators(page = 0) {\n      try {\n        const response = await TranslatorService.getAll(page, this.translators.size);\n        this.translators = response.data;\n      } catch (error) {\n        console.error('Erro ao carregar tradutores:', error.response?.data || error.message);\n        alert(error.response?.data || 'Erro ao carregar tradutores.');\n      }\n    },\n    changePage(page) {\n      this.loadTranslators(page);\n    },\n    showAddModal() {\n      this.editingTranslator = {\n        name: '',\n        email: '',\n        sourceLanguage: '',\n        targetLanguage: ''\n      };\n      this.showModal = true;\n    },\n    editTranslator(translator) {\n      this.editingTranslator = {\n        ...translator\n      };\n      this.showModal = true;\n    },\n    async saveTranslator() {\n      try {\n        await TranslatorService.save(this.editingTranslator);\n        this.closeModal();\n        this.loadTranslators();\n      } catch (error) {\n        console.error('Erro ao salvar tradutor:', error.response?.data || error.message);\n        alert(error.response?.data || 'Erro ao salvar tradutor.');\n      }\n    },\n    async deleteTranslator(translator) {\n      try {\n        await TranslatorService.delete(translator.id);\n        this.loadTranslators();\n      } catch (error) {\n        console.error('Erro ao deletar tradutor:', error.response?.data || error.message);\n        alert(error.response?.data || 'Erro ao deletar tradutor. Verifique se ele possui documentos associados.');\n      }\n    },\n    async handleFileUpload(event) {\n      try {\n        const file = event.target.files[0];\n        await TranslatorService.upload(file);\n        this.loadTranslators();\n      } catch (error) {\n        console.error('Erro ao fazer upload do arquivo:', error.response?.data || error.message);\n        alert(error.response?.data || 'Erro ao fazer upload do arquivo.');\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n    }\n  }\n};","map":{"version":3,"names":["TableView","PaginationView","ModalView","TranslatorService","components","Pagination","data","translators","content","number","size","totalPages","first","last","showModal","editingTranslator","name","email","sourceLanguage","targetLanguage","headers","label","style","$t","fields","actions","class","icon","title","handler","editTranslator","deleteTranslator","created","loadTranslators","methods","page","response","getAll","error","console","message","alert","changePage","showAddModal","translator","saveTranslator","save","closeModal","delete","id","handleFileUpload","event","file","target","files","upload"],"sources":["C:\\Projetos\\desafio-bureau-works\\translator-manager-frontend\\src\\views\\TranslatorView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h2>{{ $t('translator.title') }}</h2>\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"me-3\">\r\n          <label class=\"form-label me-2\">{{ $t('common.itemsPerPage') }}</label>\r\n          <select class=\"form-select form-select-sm d-inline-block w-auto\" v-model=\"translators.size\" @change=\"loadTranslators(0)\">\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"50\">50</option>\r\n          </select>\r\n        </div>\r\n        <button class=\"btn btn-primary me-2\" @click=\"showAddModal\">\r\n          {{ $t('translator.newTranslator') }}\r\n        </button>\r\n        <label class=\"btn btn-secondary\">\r\n          {{ $t('common.uploadCSV') }}\r\n          <input type=\"file\" accept=\".csv\" class=\"d-none\" @change=\"handleFileUpload\" />\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n    <TableView\r\n        :headers=\"headers\"\r\n        :fields=\"fields\"\r\n        :items=\"translators.content\"\r\n        :actions=\"actions\"\r\n        :currentPage=\"translators.number\"\r\n        :pageSize=\"translators.size\"\r\n    />\r\n\r\n    <Pagination\r\n        :currentPage=\"translators.number\"\r\n        :totalPages=\"translators.totalPages\"\r\n        :first=\"translators.first\"\r\n        :last=\"translators.last\"\r\n        @change=\"changePage\"\r\n    />\r\n\r\n    <ModalView\r\n        v-if=\"showModal\"\r\n        :title=\"editingTranslator.id ? $t('translator.editTranslator') : $t('translator.newTranslator')\"\r\n        @close=\"closeModal\"\r\n        @save=\"saveTranslator\"\r\n    >\r\n      <form>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">{{ $t('translator.name') }}</label>\r\n          <input v-model=\"editingTranslator.name\" type=\"text\" class=\"form-control\" required />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">{{ $t('translator.email') }}</label>\r\n          <input v-model=\"editingTranslator.email\" type=\"email\" class=\"form-control\" required />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">{{ $t('translator.sourceLanguage') }}</label>\r\n          <input v-model=\"editingTranslator.sourceLanguage\" type=\"text\" class=\"form-control\" required />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">{{ $t('translator.targetLanguage') }}</label>\r\n          <input v-model=\"editingTranslator.targetLanguage\" type=\"text\" class=\"form-control\" required />\r\n        </div>\r\n      </form>\r\n    </ModalView>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TableView from '@/components/TableView.vue';\r\nimport PaginationView from '@/components/PaginationView.vue';\r\nimport ModalView from '@/components/ModalView.vue';\r\nimport TranslatorService from '@/services/TranslatorService.js';\r\n\r\nexport default {\r\n  components: { TableView, Pagination: PaginationView, ModalView },\r\n  data() {\r\n    return {\r\n      translators: { content: [], number: 0, size: 10, totalPages: 0, first: true, last: true },\r\n      showModal: false,\r\n      editingTranslator: { name: '', email: '', sourceLanguage: '', targetLanguage: '' },\r\n      headers: [\r\n        { label: '#', style: 'width: 50px' },\r\n        { label: this.$t('translator.name') },\r\n        { label: this.$t('translator.email') },\r\n        { label: this.$t('translator.sourceLanguage') },\r\n        { label: this.$t('translator.targetLanguage') },\r\n        { label: this.$t('common.actions'), style: 'width: 100px' },\r\n      ],\r\n      fields: ['index', 'name', 'email', 'sourceLanguage', 'targetLanguage'],\r\n      actions: [\r\n        { class: 'btn btn-sm btn-primary me-2', icon: 'bi bi-pencil', title: this.$t('common.edit'), handler: this.editTranslator },\r\n        { class: 'btn btn-sm btn-danger', icon: 'bi bi-x-lg', title: this.$t('common.delete'), handler: this.deleteTranslator },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    this.loadTranslators();\r\n  },\r\n  methods: {\r\n    async loadTranslators(page = 0) {\r\n      try {\r\n        const response = await TranslatorService.getAll(page, this.translators.size);\r\n        this.translators = response.data;\r\n      } catch (error) {\r\n        console.error('Erro ao carregar tradutores:', error.response?.data || error.message);\r\n        alert(error.response?.data || 'Erro ao carregar tradutores.');\r\n      }\r\n    },\r\n    changePage(page) {\r\n      this.loadTranslators(page);\r\n    },\r\n    showAddModal() {\r\n      this.editingTranslator = { name: '', email: '', sourceLanguage: '', targetLanguage: '' };\r\n      this.showModal = true;\r\n    },\r\n    editTranslator(translator) {\r\n      this.editingTranslator = { ...translator };\r\n      this.showModal = true;\r\n    },\r\n    async saveTranslator() {\r\n      try {\r\n        await TranslatorService.save(this.editingTranslator);\r\n        this.closeModal();\r\n        this.loadTranslators();\r\n      } catch (error) {\r\n        console.error('Erro ao salvar tradutor:', error.response?.data || error.message);\r\n        alert(error.response?.data || 'Erro ao salvar tradutor.');\r\n      }\r\n    },\r\n    async deleteTranslator(translator) {\r\n      try {\r\n        await TranslatorService.delete(translator.id);\r\n        this.loadTranslators();\r\n      } catch (error) {\r\n        console.error('Erro ao deletar tradutor:', error.response?.data || error.message);\r\n        alert(error.response?.data || 'Erro ao deletar tradutor. Verifique se ele possui documentos associados.');\r\n      }\r\n    },\r\n    async handleFileUpload(event) {\r\n      try {\r\n        const file = event.target.files[0];\r\n        await TranslatorService.upload(file);\r\n        this.loadTranslators();\r\n      } catch (error) {\r\n        console.error('Erro ao fazer upload do arquivo:', error.response?.data || error.message);\r\n        alert(error.response?.data || 'Erro ao fazer upload do arquivo.');\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}