{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TranslatorView',\n  data() {\n    return {\n      translators: {\n        content: [],\n        number: 0,\n        size: 10,\n        totalPages: 0,\n        first: true,\n        last: true\n      },\n      showModal: false,\n      editingTranslator: {\n        name: '',\n        email: '',\n        sourceLanguage: '',\n        targetLanguage: ''\n      }\n    };\n  },\n  created() {\n    this.loadTranslators();\n  },\n  methods: {\n    async loadTranslators(page = 0) {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/translators?page=${page}&size=${this.translators.size}`);\n        this.translators = response.data;\n      } catch (error) {\n        console.error('Erro ao carregar tradutores:', error);\n        alert(this.$t('errors.loadError'));\n      }\n    },\n    changePage(page) {\n      this.loadTranslators(page);\n    },\n    showAddModal() {\n      this.editingTranslator = {\n        name: '',\n        email: '',\n        sourceLanguage: '',\n        targetLanguage: ''\n      };\n      this.showModal = true;\n    },\n    editTranslator(translator) {\n      this.editingTranslator = {\n        ...translator\n      };\n      this.showModal = true;\n    },\n    async saveTranslator() {\n      try {\n        if (this.editingTranslator.id) {\n          await axios.put(`http://localhost:8080/api/translators/${this.editingTranslator.id}`, this.editingTranslator);\n        } else {\n          await axios.post('http://localhost:8080/api/translators', this.editingTranslator);\n        }\n        this.closeModal();\n        this.loadTranslators();\n      } catch (error) {\n        console.error('Erro ao salvar tradutor:', error);\n        alert(this.$t('errors.saveError'));\n      }\n    },\n    async deleteTranslator(id) {\n      if (confirm(this.$t('common.confirmDelete'))) {\n        try {\n          await axios.delete(`http://localhost:8080/api/translators/${id}`);\n          this.loadTranslators();\n        } catch (error) {\n          console.error('Erro ao excluir tradutor:', error);\n          alert(this.$t('errors.deleteError'));\n        }\n      }\n    },\n    async handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        await axios.post('http://localhost:8080/api/translators/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.loadTranslators();\n      } catch (error) {\n        console.error('Erro ao fazer upload do arquivo:', error);\n        alert(this.$t('errors.uploadError'));\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.editingTranslator = {\n        name: '',\n        email: '',\n        sourceLanguage: '',\n        targetLanguage: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","translators","content","number","size","totalPages","first","last","showModal","editingTranslator","email","sourceLanguage","targetLanguage","created","loadTranslators","methods","page","response","get","error","console","alert","$t","changePage","showAddModal","editTranslator","translator","saveTranslator","id","put","post","closeModal","deleteTranslator","confirm","delete","handleFileUpload","event","file","target","files","formData","FormData","append","headers"],"sources":["C:\\Projetos\\translator-manager-frontend\\src\\views\\TranslatorView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h2>{{ $t('translator.title') }}</h2>\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"me-3\">\r\n          <label class=\"form-label me-2\">{{ $t('common.itemsPerPage') }}</label>\r\n          <select class=\"form-select form-select-sm d-inline-block w-auto\" v-model=\"translators.size\" @change=\"loadTranslators(0)\">\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"50\">50</option>\r\n          </select>\r\n        </div>\r\n        <button class=\"btn btn-primary me-2\" @click=\"showAddModal\">\r\n          Novo Tradutor\r\n        </button>\r\n        <label class=\"btn btn-secondary\">\r\n          Upload CSV\r\n          <input\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            class=\"d-none\"\r\n            @change=\"handleFileUpload\"\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n    <table class=\"table table-sm table-hover\">\r\n      <thead class=\"table-light\">\r\n        <tr>\r\n          <th class=\"text-center\" style=\"width: 50px\">#</th>\r\n          <th>{{ $t('translator.name') }}</th>\r\n          <th>{{ $t('translator.email') }}</th>\r\n          <th>{{ $t('translator.sourceLanguage') }}</th>\r\n          <th>{{ $t('translator.targetLanguage') }}</th>\r\n          <th class=\"text-center\" style=\"width: 100px\">{{ $t('common.actions') }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(translator, index) in translators.content\" :key=\"translator.id\">\r\n          <td class=\"text-center\">{{ (translators.number * translators.size) + index + 1 }}</td>\r\n          <td>{{ translator.name }}</td>\r\n          <td>{{ translator.email }}</td>\r\n          <td>{{ translator.sourceLanguage }}</td>\r\n          <td>{{ translator.targetLanguage }}</td>\r\n          <td>\r\n            <div class=\"d-flex justify-content-center\">\r\n              <button\r\n                class=\"btn btn-sm btn-primary me-2\"\r\n                @click=\"editTranslator(translator)\"\r\n                :title=\"$t('common.edit')\"\r\n              >\r\n                <i class=\"bi bi-pencil\"></i>\r\n              </button>\r\n              <button\r\n                class=\"btn btn-sm btn-danger\"\r\n                @click=\"deleteTranslator(translator.id)\"\r\n                :title=\"$t('common.delete')\"\r\n              >\r\n                <i class=\"bi bi-x-lg\"></i>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Paginação -->\r\n    <nav aria-label=\"Navegação de páginas\" class=\"mt-4\">\r\n      <ul class=\"pagination justify-content-center\">\r\n        <li class=\"page-item\" :class=\"{ disabled: translators.first }\">\r\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(translators.number - 1)\">{{ $t('common.previous') }}</a>\r\n        </li>\r\n        <li class=\"page-item\" v-for=\"page in totalPages\" :key=\"page\" :class=\"{ active: page - 1 === translators.number }\">\r\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page - 1)\">{{ page }}</a>\r\n        </li>\r\n        <li class=\"page-item\" :class=\"{ disabled: translators.last }\">\r\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(translators.number + 1)\">{{ $t('common.next') }}</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n    <!-- Modal para Adicionar/Editar -->\r\n    <div class=\"modal\" v-if=\"showModal\" tabindex=\"-1\" style=\"display: block\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">\r\n              {{ editingTranslator.id ? $t('translator.editTranslator') : $t('translator.newTranslator') }}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close\"\r\n              @click=\"closeModal\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"saveTranslator\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">{{ $t('translator.name') }}</label>\r\n                <input\r\n                  v-model=\"editingTranslator.name\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">{{ $t('translator.email') }}</label>\r\n                <input\r\n                  v-model=\"editingTranslator.email\"\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">{{ $t('translator.sourceLanguage') }}</label>\r\n                <input\r\n                  v-model=\"editingTranslator.sourceLanguage\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">{{ $t('translator.targetLanguage') }}</label>\r\n                <input\r\n                  v-model=\"editingTranslator.targetLanguage\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">\r\n                  {{ $t('common.cancel') }}\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\">{{ $t('common.save') }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TranslatorView',\r\n  data() {\r\n    return {\r\n      translators: {\r\n        content: [],\r\n        number: 0,\r\n        size: 10,\r\n        totalPages: 0,\r\n        first: true,\r\n        last: true\r\n      },\r\n      showModal: false,\r\n      editingTranslator: {\r\n        name: '',\r\n        email: '',\r\n        sourceLanguage: '',\r\n        targetLanguage: ''\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.loadTranslators();\r\n  },\r\n  methods: {\r\n    async loadTranslators(page = 0) {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/translators?page=${page}&size=${this.translators.size}`);\r\n        this.translators = response.data;\r\n      } catch (error) {\r\n        console.error('Erro ao carregar tradutores:', error);\r\n        alert(this.$t('errors.loadError'));\r\n      }\r\n    },\r\n    changePage(page) {\r\n      this.loadTranslators(page);\r\n    },\r\n    showAddModal() {\r\n      this.editingTranslator = {\r\n        name: '',\r\n        email: '',\r\n        sourceLanguage: '',\r\n        targetLanguage: ''\r\n      };\r\n      this.showModal = true;\r\n    },\r\n    editTranslator(translator) {\r\n      this.editingTranslator = { ...translator };\r\n      this.showModal = true;\r\n    },\r\n    async saveTranslator() {\r\n      try {\r\n        if (this.editingTranslator.id) {\r\n          await axios.put(\r\n            `http://localhost:8080/api/translators/${this.editingTranslator.id}`,\r\n            this.editingTranslator\r\n          );\r\n        } else {\r\n          await axios.post(\r\n            'http://localhost:8080/api/translators',\r\n            this.editingTranslator\r\n          );\r\n        }\r\n        this.closeModal();\r\n        this.loadTranslators();\r\n      } catch (error) {\r\n        console.error('Erro ao salvar tradutor:', error);\r\n        alert(this.$t('errors.saveError'));\r\n      }\r\n    },\r\n    async deleteTranslator(id) {\r\n      if (confirm(this.$t('common.confirmDelete'))) {\r\n        try {\r\n          await axios.delete(`http://localhost:8080/api/translators/${id}`);\r\n          this.loadTranslators();\r\n        } catch (error) {\r\n          console.error('Erro ao excluir tradutor:', error);\r\n          alert(this.$t('errors.deleteError'));\r\n        }\r\n      }\r\n    },\r\n    async handleFileUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      try {\r\n        await axios.post('http://localhost:8080/api/translators/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        this.loadTranslators();\r\n      } catch (error) {\r\n        console.error('Erro ao fazer upload do arquivo:', error);\r\n        alert(this.$t('errors.uploadError'));\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.editingTranslator = {\r\n        name: '',\r\n        email: '',\r\n        sourceLanguage: '',\r\n        targetLanguage: ''\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}